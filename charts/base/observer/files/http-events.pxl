import px

# Define the query
df = px.DataFrame(table='http_events')

# Grab the command line from the metadata
df.cmdline = px.upid_to_cmdline(df.upid)

# Rename attributes
df.time = df.time_

# Remove enum
df.is_server_side_tracing = df.trace_role == 2

# TODO: this doesn't work yet... would love to not emit the query
# Split 'req_path' on '?' and take only the path
# df.req_path = df['req_path'].map(lambda path: path.split('?')[0].split('#')[0])

# Extract Kubernetes context
df.kubernetes_namespace = df.ctx['namespace']
df.kubernetes_service = df.ctx['service']
df.kubernetes_host = df.ctx['host']
df.kubernetes_node = df.ctx['node']
df.kubernetes_pod = df.ctx['pod']
df.kubernetes_container = df.ctx['container']

# Get the destination Kubernetes resources from the connection's remote address
df.kubernetes_remote_service = px.service_id_to_service_name(px.ip_to_service_id(df.remote_addr))
df.kubernetes_remote_pod = px.pod_id_to_pod_name(px.ip_to_pod_id(df.remote_addr))

# Select desired columns
selected_columns = [
  'time', 'cmdline', 'upid', 'latency', 'major_version', 'minor_version', 'is_server_side_tracing',
  'req_method', 'req_path', 'remote_addr', 'remote_port', 'resp_status', 'resp_message',
  'kubernetes_namespace', 'kubernetes_service', 'kubernetes_host', 'kubernetes_node', 'kubernetes_pod', 'kubernetes_container',
  'kubernetes_remote_service', 'kubernetes_remote_pod'
]
df = df[selected_columns]

# Output the dataframe
px.display(df)

# {
#   "time": "1701375839414726144",
#   "cmdline": "/usr/bin/python3 -m http.server",
#   "upid": "12345678901234567890123456789012345678",
#   "latency": 200,
#   "major_version": 1,
#   "minor_version": 1,
#   "is_server_side_tracing": true,
#   "req_method": "GET",
#   "req_path": "/api/data",
#   "remote_addr": "192.168.1.100",
#   "remote_port": 8080,
#   "resp_status": 200,
#   "resp_message": "OK",
#   "kubernetes_namespace": "default",
#   "kubernetes_service": "web-service",
#   "kubernetes_host": "node-1",
#   "kubernetes_node": "node-1.cluster.local",
#   "kubernetes_pod": "web-pod-1234",
#   "kubernetes_container": "web-container"
#   "kubernetes_remote_service": "",
#   "kubernetes_remote_pod": ""
# }
